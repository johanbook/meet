// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Meet API
 * The Meet API can be used to interact with Meet
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JournalProfileDetails } from './JournalProfileDetails';
import {
    JournalProfileDetailsFromJSON,
    JournalProfileDetailsFromJSONTyped,
    JournalProfileDetailsToJSON,
} from './JournalProfileDetails';

/**
 * 
 * @export
 * @interface JournalEntryDetails
 */
export interface JournalEntryDetails {
    /**
     * 
     * @type {string}
     * @memberof JournalEntryDetails
     */
    commandName: string;
    /**
     * 
     * @type {Date}
     * @memberof JournalEntryDetails
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof JournalEntryDetails
     */
    id: string;
    /**
     * 
     * @type {object}
     * @memberof JournalEntryDetails
     */
    payload: object;
    /**
     * 
     * @type {JournalProfileDetails}
     * @memberof JournalEntryDetails
     */
    profile: JournalProfileDetails;
}

/**
 * Check if a given object implements the JournalEntryDetails interface.
 */
export function instanceOfJournalEntryDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "commandName" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "payload" in value;
    isInstance = isInstance && "profile" in value;

    return isInstance;
}

export function JournalEntryDetailsFromJSON(json: any): JournalEntryDetails {
    return JournalEntryDetailsFromJSONTyped(json, false);
}

export function JournalEntryDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): JournalEntryDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'commandName': json['commandName'],
        'createdAt': (new Date(json['createdAt'])),
        'id': json['id'],
        'payload': json['payload'],
        'profile': JournalProfileDetailsFromJSON(json['profile']),
    };
}

export function JournalEntryDetailsToJSON(value?: JournalEntryDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'commandName': value.commandName,
        'createdAt': (value.createdAt.toISOString()),
        'id': value.id,
        'payload': value.payload,
        'profile': JournalProfileDetailsToJSON(value.profile),
    };
}

