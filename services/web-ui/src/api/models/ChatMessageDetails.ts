// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Meet API
 * The Meet API can be used to interact with Meet
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChatMessageProfileDetails } from './ChatMessageProfileDetails';
import {
    ChatMessageProfileDetailsFromJSON,
    ChatMessageProfileDetailsFromJSONTyped,
    ChatMessageProfileDetailsToJSON,
} from './ChatMessageProfileDetails';

/**
 * 
 * @export
 * @interface ChatMessageDetails
 */
export interface ChatMessageDetails {
    /**
     * 
     * @type {number}
     * @memberof ChatMessageDetails
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ChatMessageDetails
     */
    message: string;
    /**
     * 
     * @type {ChatMessageProfileDetails}
     * @memberof ChatMessageDetails
     */
    profile: ChatMessageProfileDetails;
    /**
     * 
     * @type {boolean}
     * @memberof ChatMessageDetails
     */
    sentByCurrentUser: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ChatMessageDetails
     */
    read: boolean;
}

/**
 * Check if a given object implements the ChatMessageDetails interface.
 */
export function instanceOfChatMessageDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "profile" in value;
    isInstance = isInstance && "sentByCurrentUser" in value;
    isInstance = isInstance && "read" in value;

    return isInstance;
}

export function ChatMessageDetailsFromJSON(json: any): ChatMessageDetails {
    return ChatMessageDetailsFromJSONTyped(json, false);
}

export function ChatMessageDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatMessageDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'message': json['message'],
        'profile': ChatMessageProfileDetailsFromJSON(json['profile']),
        'sentByCurrentUser': json['sentByCurrentUser'],
        'read': json['read'],
    };
}

export function ChatMessageDetailsToJSON(value?: ChatMessageDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'message': value.message,
        'profile': ChatMessageProfileDetailsToJSON(value.profile),
        'sentByCurrentUser': value.sentByCurrentUser,
        'read': value.read,
    };
}

