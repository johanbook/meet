// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Meet API
 * The Meet API can be used to interact with Meet
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationWebSocketDetails
 */
export interface NotificationWebSocketDetails {
    /**
     * 
     * @type {string}
     * @memberof NotificationWebSocketDetails
     */
    description: string;
    /**
     * 
     * @type {object}
     * @memberof NotificationWebSocketDetails
     */
    data: object;
    /**
     * 
     * @type {string}
     * @memberof NotificationWebSocketDetails
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationWebSocketDetails
     */
    resourcePath: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationWebSocketDetails
     */
    type: NotificationWebSocketDetailsTypeEnum;
}


/**
 * @export
 */
export const NotificationWebSocketDetailsTypeEnum = {
    AddedToOrganization: 'added_to_organization',
    NewBlogPost: 'new_blog_post',
    NewBlogPostComment: 'new_blog_post_comment',
    NewChatMessage: 'new_chat_message'
} as const;
export type NotificationWebSocketDetailsTypeEnum = typeof NotificationWebSocketDetailsTypeEnum[keyof typeof NotificationWebSocketDetailsTypeEnum];


/**
 * Check if a given object implements the NotificationWebSocketDetails interface.
 */
export function instanceOfNotificationWebSocketDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "resourcePath" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function NotificationWebSocketDetailsFromJSON(json: any): NotificationWebSocketDetails {
    return NotificationWebSocketDetailsFromJSONTyped(json, false);
}

export function NotificationWebSocketDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationWebSocketDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': json['description'],
        'data': json['data'],
        'message': json['message'],
        'resourcePath': json['resourcePath'],
        'type': json['type'],
    };
}

export function NotificationWebSocketDetailsToJSON(value?: NotificationWebSocketDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'data': value.data,
        'message': value.message,
        'resourcePath': value.resourcePath,
        'type': value.type,
    };
}

