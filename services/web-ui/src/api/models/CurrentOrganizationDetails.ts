// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Meet API
 * The Meet API can be used to interact with Meet
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OrganizationPhotoDetails } from './OrganizationPhotoDetails';
import {
    OrganizationPhotoDetailsFromJSON,
    OrganizationPhotoDetailsFromJSONTyped,
    OrganizationPhotoDetailsToJSON,
} from './OrganizationPhotoDetails';

/**
 * 
 * @export
 * @interface CurrentOrganizationDetails
 */
export interface CurrentOrganizationDetails {
    /**
     * 
     * @type {Array<string>}
     * @memberof CurrentOrganizationDetails
     */
    features: Array<CurrentOrganizationDetailsFeaturesEnum>;
    /**
     * 
     * @type {string}
     * @memberof CurrentOrganizationDetails
     */
    role: CurrentOrganizationDetailsRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof CurrentOrganizationDetails
     */
    theme: CurrentOrganizationDetailsThemeEnum;
    /**
     * 
     * @type {string}
     * @memberof CurrentOrganizationDetails
     */
    created: string;
    /**
     * 
     * @type {number}
     * @memberof CurrentOrganizationDetails
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof CurrentOrganizationDetails
     */
    name: string;
    /**
     * 
     * @type {OrganizationPhotoDetails}
     * @memberof CurrentOrganizationDetails
     */
    photo?: OrganizationPhotoDetails;
}


/**
 * @export
 */
export const CurrentOrganizationDetailsFeaturesEnum = {
    Blog: 'blog',
    Bookings: 'bookings',
    Chat: 'chat',
    TimeSeries: 'time-series'
} as const;
export type CurrentOrganizationDetailsFeaturesEnum = typeof CurrentOrganizationDetailsFeaturesEnum[keyof typeof CurrentOrganizationDetailsFeaturesEnum];

/**
 * @export
 */
export const CurrentOrganizationDetailsRoleEnum = {
    Admin: 'admin',
    Member: 'member'
} as const;
export type CurrentOrganizationDetailsRoleEnum = typeof CurrentOrganizationDetailsRoleEnum[keyof typeof CurrentOrganizationDetailsRoleEnum];

/**
 * @export
 */
export const CurrentOrganizationDetailsThemeEnum = {
    Default: 'default',
    Neon: 'neon'
} as const;
export type CurrentOrganizationDetailsThemeEnum = typeof CurrentOrganizationDetailsThemeEnum[keyof typeof CurrentOrganizationDetailsThemeEnum];


/**
 * Check if a given object implements the CurrentOrganizationDetails interface.
 */
export function instanceOfCurrentOrganizationDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "features" in value;
    isInstance = isInstance && "role" in value;
    isInstance = isInstance && "theme" in value;
    isInstance = isInstance && "created" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function CurrentOrganizationDetailsFromJSON(json: any): CurrentOrganizationDetails {
    return CurrentOrganizationDetailsFromJSONTyped(json, false);
}

export function CurrentOrganizationDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrentOrganizationDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'features': json['features'],
        'role': json['role'],
        'theme': json['theme'],
        'created': json['created'],
        'id': json['id'],
        'name': json['name'],
        'photo': !exists(json, 'photo') ? undefined : OrganizationPhotoDetailsFromJSON(json['photo']),
    };
}

export function CurrentOrganizationDetailsToJSON(value?: CurrentOrganizationDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'features': value.features,
        'role': value.role,
        'theme': value.theme,
        'created': value.created,
        'id': value.id,
        'name': value.name,
        'photo': OrganizationPhotoDetailsToJSON(value.photo),
    };
}

