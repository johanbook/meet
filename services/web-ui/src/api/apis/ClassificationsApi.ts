// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Meet API
 * The Meet API can be used to interact with Meet
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ClassificationDetails,
} from '../models/index';
import {
    ClassificationDetailsFromJSON,
    ClassificationDetailsToJSON,
} from '../models/index';

export interface GetClassificationsRequest {
    category: string;
    includeManual?: boolean;
    includeObsolete?: boolean;
    locale?: string;
    parentUuid?: string;
}

/**
 * 
 */
export class ClassificationsApi extends runtime.BaseAPI {

    /**
     */
    async getClassificationsRaw(requestParameters: GetClassificationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ClassificationDetails>>> {
        if (requestParameters.category === null || requestParameters.category === undefined) {
            throw new runtime.RequiredError('category','Required parameter requestParameters.category was null or undefined when calling getClassifications.');
        }

        const queryParameters: any = {};

        if (requestParameters.category !== undefined) {
            queryParameters['category'] = requestParameters.category;
        }

        if (requestParameters.includeManual !== undefined) {
            queryParameters['includeManual'] = requestParameters.includeManual;
        }

        if (requestParameters.includeObsolete !== undefined) {
            queryParameters['includeObsolete'] = requestParameters.includeObsolete;
        }

        if (requestParameters.locale !== undefined) {
            queryParameters['locale'] = requestParameters.locale;
        }

        if (requestParameters.parentUuid !== undefined) {
            queryParameters['parentUuid'] = requestParameters.parentUuid;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/classifications/byCategory`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ClassificationDetailsFromJSON));
    }

    /**
     */
    async getClassifications(requestParameters: GetClassificationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ClassificationDetails>> {
        const response = await this.getClassificationsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
