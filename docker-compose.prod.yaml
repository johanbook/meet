x-logging: &logging
  driver: loki
  options:
    loki-url: "$LOKI_URL"
    loki-external-labels: "container_name={{.Name}}"
    loki-pipeline-stages: |
      - multiline:
          firstline: '^[a-zA-Z0-9\[\{\(]'

services:
  traefik:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "traefik"
    command:
      - "--accesslog=true"
      - "--accesslog.fields.headers.names.x-correlation-id=keep"
      - "--accesslog.format=json"
      - "--log.format=json"

      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--entrypoints.webinsecure.address=:80"
      - "--entrypoints.webinsecure.http.redirections.entrypoint.to=web"
      - "--entrypoints.webinsecure.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.address=:443"
      - "--entrypoints.web.http.tls.certresolver=letsencrypt"

      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=webinsecure"
      - "--certificatesresolvers.letsencrypt.acme.email=$EMAIL"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "$PWD/.data/letsencrypt:/letsencrypt"

  api:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "api"
    image: ghcr.io/johanbook/meet/api:latest

  auth-api:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "auth-api"
    image: ghcr.io/johanbook/meet/auth-api:latest

  auth-ui:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "auth-ui"
    image: ghcr.io/johanbook/meet/auth-ui:latest

  console:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "console"

  db:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "db"

  minio:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "minio"

  pgadmin:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "pgadmin"

  supertokens:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "supertokens"

  watchtower:
    logging: *logging
    image: containrrr/watchtower
    container_name: watchtower
    command:
      - "--label-enable"
      - "--cleanup"
      - "--schedule"
      - "0 0 * * * *"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  web-ui:
    logging: *logging
    extends:
      file: "./docker-compose.shared.yaml"
      service: "web-ui"
    image: ghcr.io/johanbook/meet/web-ui:latest
