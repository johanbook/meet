services:
  traefik:
    image: "traefik:v3.4.0"
    container_name: "traefik"
    command:
      - "--accesslog=true"
      - "--accesslog.fields.headers.names.x-correlation-id=keep"
      - "--api.insecure=true"

      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--entrypoints.web.address=:80"

      # Adds correlation id
      - "--tracing.jaeger.samplingparam=0"
      - "--tracing.jaeger.tracecontextheadername=x-correlation-id"

    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.basicauth.basicauth.usersfile=/etc/traefik/usersfile"

      - "traefik.http.routers.edge-router.entrypoints=web"
      - "traefik.http.routers.edge-router.rule=Host(`traefik.console.$DOMAIN`)"
      - "traefik.http.routers.edge-router.middlewares=basicauth"
      - "traefik.http.services.edge-router.loadbalancer.server.port=8080"
    ports:
      - 80:80
    restart: "unless-stopped"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "$PWD/config/traefik:/etc/traefik"

  api:
    container_name: "api"
    environment:
      DB_DATABASE: "api"
      DB_HOST: "db"
      DB_PASSWORD: "$POSTGRES_PASSWORD"
      DB_PORT: 5432
      DB_USERNAME: "$POSTGRES_USERNAME"
      EMAIL: "$EMAIL"
      LOG_LEVEL: "$LOG_LEVEL"
      PORT: 80
      S3_ACCESS_KEY: "$MINIO_ACCESS_KEY"
      S3_ENDPOINT: "minio"
      S3_PUBLIC_ENDPOINT: "$PROTOCOL://s3.$DOMAIN"
      S3_SECRET_KEY: "$MINIO_SECRET_KEY"
      SMTP_HOST: "$SMTP_HOST"
      SMTP_PASSWORD: "$SMTP_PASSWORD"
      SMTP_PORT: "$SMTP_PORT"
      SMTP_USERNAME: "$SMTP_USERNAME"
      UI_DOMAIN: "$PROTOCOL://$DOMAIN"
      VAPID_PUBLIC_KEY: "$VAPID_PUBLIC_KEY"
      VAPID_PRIVATE_KEY: "$VAPID_PRIVATE_KEY"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`$DOMAIN`)&&PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.routers.api-healthcheck.rule=Host(`$DOMAIN`)&&PathPrefix(`/api/health`)"
      - "traefik.http.routers.api-healthcheck.entrypoints=web"

      - "com.centurylinklabs.watchtower.enable=true"
    restart: "unless-stopped"

  console:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: console
    environment:
      HOMEPAGE_ALLOWED_HOSTS: "console.$DOMAIN"
      HOMEPAGE_VAR_DOMAIN: "$DOMAIN"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.console.rule=Host(`console.$DOMAIN`)"
      - "traefik.http.routers.console.entrypoints=web"
      - "traefik.http.routers.console.middlewares=basicauth"
    volumes:
      - "$PWD/config/console/:/app/config"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  auth-api:
    container_name: "auth-api"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`$DOMAIN`)&&(PathPrefix(`/auth/api`)||PathPrefix(`/logout`))"
      - "traefik.http.routers.auth-api.entrypoints=web"
      - "traefik.http.middlewares.auth.forwardauth.address=http://auth-api/authenticate"
      - "traefik.http.middlewares.auth.forwardauth.authResponseHeaders=x-user-id"

      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      API_URL: "$PROTOCOL://$DOMAIN"
      UI_URL: "$PROTOCOL://$DOMAIN"
      SUPERTOKENS_URL: "http://supertokens:3567"
    restart: "unless-stopped"

  auth-ui:
    container_name: "auth-ui"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-ui.rule=Host(`$DOMAIN`)&&PathPrefix(`/login`)"
      - "traefik.http.routers.auth-ui.entrypoints=web"

      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      API_URL: "$PROTOCOL://$DOMAIN"
      UI_URL: "$PROTOCOL://$DOMAIN"
      SUPERTOKENS_URL: "http://supertokens:3567"
    restart: "unless-stopped"

  db:
    image: "postgis/postgis:17-3.5-alpine"
    container_name: "db"
    environment:
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
      POSTGRES_USERNAME: "$POSTGRES_USERNAME"
    ports:
      - "5432:5432"
    volumes:
      - "$PWD/config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - ".data/postgres:/var/lib/postgresql/data:rw"
    restart: "unless-stopped"

  pgadmin:
    image: "dpage/pgadmin4"
    container_name: "pgadmin"
    environment:
      PGADMIN_DEFAULT_EMAIL: "$PGADMIN_EMAIL"
      PGADMIN_DEFAULT_PASSWORD: "$PGADMIN_PASSWORD"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.console.$DOMAIN`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.routers.pgadmin.middlewares=basicauth"
    volumes:
      - ".data/pgadmin:/var/lib/pgadmin:rw"

  supertokens:
    image: "registry.supertokens.io/supertokens/supertokens-postgresql:11.0.4"
    container_name: "supertokens"
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://$POSTGRES_USERNAME:$POSTGRES_PASSWORD@db:5432/"
    restart: "unless-stopped"

  web-ui:
    container_name: "web-ui"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-ui.rule=Host(`$DOMAIN`)&&!PathPrefix(`/api`)"
      - "traefik.http.routers.web-ui.entrypoints=web"

      - "com.centurylinklabs.watchtower.enable=true"
    restart: "unless-stopped"

  minio:
    image: "minio/minio"
    container_name: "minio"
    command:
      - "server"
      - "/data"
      - "--console-address"
      - ":9001"
    environment:
      MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
      MINIO_SECRET_KEY: $MINIO_SECRET_KEY
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.entrypoints=web"
      - "traefik.http.routers.minio.rule=Host(`minio.console.$DOMAIN`)"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.routers.minio.middlewares=basicauth"
      - "traefik.http.services.minio.loadbalancer.server.port=9001"

      - "traefik.http.routers.s3.entrypoints=web"
      - "traefik.http.routers.s3.rule=Host(`s3.$DOMAIN`)"
      - "traefik.http.routers.s3.service=s3"
      - "traefik.http.services.s3.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.s3-cache.headers.customresponseheaders.Cache-Control=max-age=604800" # Cached for 1 week. Objects should be immutable and we can use a hard cache
      - "traefik.http.routers.s3.middlewares=s3-cache"
    restart: "unless-stopped"
    volumes:
      - ".data/mino:/data:rw"
